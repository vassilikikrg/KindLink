@model VolunteeringApp.Models.Identity.Citizen

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mb-4">Profile Details</h1>
<hr class="mb-4" />

<div class="card shadow p-0 my-4">
    <div class="card-header text-light" style="background-color:var(--secondary-color)">
        <!-- Citizen Name, Username, Type -->
        <div class="d-flex align-items-center">
            <!-- Profile Picture -->
            @if (Model.Image != null && Model.Image.Length > 0)
            {
                <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Image)" alt="Profile Picture" class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover;">
            }
            else
            {
                <img src="~/images/avatar.png" alt="Profile Picture" class="rounded-circle me-3" style="width: 60px; height: 60px; object-fit: cover;">
            }
            <div>
                <h5 class="card-title mb-0">@Html.DisplayFor(modelItem => Model.Firstname) @Html.DisplayFor(modelItem => Model.Lastname)</h5>
                <h6 class="card-subtitle mb-2 text-body-secondary fw-light">&#64;@Html.DisplayFor(modelItem => Model.UserName)</h6>
            </div>
        </div>
    </div>
    <div class="card-body">
        <dl class="row m-0">
            <!-- Citizen Description -->
            <dt class="col-sm-2">
                <i class="bi bi-sticky-fill" style="color:var(--primary-color)"></i> <!-- Description icon -->
                Description
            </dt>
            <dd class="col-sm-10">
                @if (Model.Description != null)
                {
                    @Html.DisplayFor(model => model.Description)
                }
                else
                {
                    <em class="text-muted">No description provided.</em>
                }
            </dd>
            <hr />

            <!-- Email -->
            <dt class="col-sm-2">
                <i class="bi bi-envelope-fill" style="color:var(--primary-color)"></i> <!-- Email icon -->
                Email
            </dt>
            <dd class="col-sm-10">
                <a href="mailto:@Model.Email" class="text-decoration-none">
                    @Html.DisplayFor(model => model.Email)
                </a>
            </dd>

            <!-- Phone Number -->
            <dt class="col-sm-2">
                <i class="bi bi-telephone-fill" style="color:var(--primary-color)"></i> <!-- Phone icon -->
                Phone
            </dt>
            <dd class="col-sm-10">
                @if (Model.PhoneNumber != null)
                {
                    <a href="tel:@Model.PhoneNumber" class="text-decoration-none">
                        @Html.DisplayFor(model => model.PhoneNumber)
                    </a>
                }
                else
                {
                    <em class="text-muted">No phone provided.</em>
                }
            </dd>
        </dl>
    </div>
    @if (ViewBag.isTheProfileOwner == true)
    {
        <div class="card-footer bg-transparent">
            <!-- Links -->
            <div class="d-flex justify-content-center">
                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-outline-primary-custom me-1"><i class="bi bi-pencil-fill"></i> Edit Profile</a>
                <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-outline-danger-custom"><i class="bi bi-trash-fill"></i> Delete Profile</a>
            </div>
        </div>
    }
</div>

<div class="row">
    <!--List of following organizations-->
    <div class="col-6">
        <div class="card h-100">
            <!-- Added h-100 class to make the card always fill the height -->
            <div class="card-body d-flex flex-column">
                <h4><i class="bi bi-person-heart" style="color:var(--secondary-color)"></i> Following</h4>
                <hr />
                <div class="list-group list-group-flush">
                    @if (ViewData["Following"] != null && ((IEnumerable<VolunteeringApp.Models.Social.FollowRelationship>)ViewData["Following"]).Any())
                    {
                        foreach (var item in ViewData["Following"] as IEnumerable<VolunteeringApp.Models.Social.FollowRelationship>)
                        {
                            <a href="@Url.Action("Details", "Organization", new { id = item.FollowedId })" class="list-group-item">@item.Followed.OfficialName (&#64;@item.Followed.UserName)</a>
                        }
                    }
                    else
                    {
                        <p>No organizations followed.</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <!--List of attended events-->
    <div class="col-6">
        <div class="card h-100">
            <!-- Added h-100 class to make the card always fill the height -->
            <div class="card-body d-flex flex-column">
                <h4><i class="bi bi-calendar-event-fill" style="color:var(--secondary-color)"></i> Joined Events</h4>
                <hr />
                <h5> Upcoming</h5>
                <div class="list-group list-group-flush">
                    @if (ViewData["MyUpcomingEvents"] != null && ((IEnumerable<VolunteeringApp.Models.Social.EventParticipant>)ViewData["MyUpcomingEvents"]).Any())
                    {
                        foreach (var item in ViewData["MyUpcomingEvents"] as IEnumerable<VolunteeringApp.Models.Social.EventParticipant>)
                        {
                            <a href="@Url.Action("Details", "Events", new { id = item.Event.Id })" class="list-group-item">@item.Event.Title (@item.Event.StartTime.ToString("ddd, dd MMM yyyy 'at' hh:mm tt"))</a>
                        }
                    }
                    else
                    {
                        <p>No upcoming events.</p>
                    }
                    <h5 class="mt-3">Past</h5>
                    @if (ViewData["MyPastEvents"] != null && ((IEnumerable<VolunteeringApp.Models.Social.EventParticipant>)ViewData["MyPastEvents"]).Any())
                    {
                        foreach (var item in ViewData["MyPastEvents"] as IEnumerable<VolunteeringApp.Models.Social.EventParticipant>)
                        {
                            <a href="@Url.Action("Details", "Events", new { id = item.Event.Id })" class="list-group-item">@item.Event.Title (@item.Event.StartTime.ToString("ddd, dd MMM yyyy 'at' hh:mm tt"))</a>
                        }
                    }
                    else
                    {
                        <p>No events attended.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
