@model VolunteeringApp.ViewModels.DashboardViewModel;

@{
    ViewData["Title"] = "Organization Dashboard";
}

<style>
    .button-style{
        background-color: var(--secondary-color);
        color: white;
    }
</style>
<div class="row my-4">
    <h3>Welcome back, @User.Identity.Name!</h3>
</div>

<div class="row">
    <div class="col-md-3 d-flex flex-column">
        
        <!-- Organization Profile -->
        <div class="card mb-3 flex-grow-1">
            <div class="card-body">
                <h2 class="mb-3">Profile Overview</h2>
                <hr />
                <div class="row mb-3">
                        <div class="text-center">
                        <!-- Profile Picture -->
                        @if (Model.Organization.Image != null && Model.Organization.Image.Length > 0)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Organization.Image)" alt="Profile Picture" class="rounded-circle me-3" style="height:96px;width:96px; object-fit: cover;">
                        }
                        else
                        {
                            <img src="~/images/avatar.png" alt="Profile Picture" class="rounded-circle me-3" style="height:96px;width:96px; object-fit: cover;">
                        }
                            <!-- Organization Name -->
                            <h4 class="card-title mt-2">@Html.DisplayFor(modelItem => Model.Organization.OfficialName)</h4>
                            <h6 class="card-subtitle mb-2 text-muted">&#64;@Html.DisplayFor(modelItem => Model.Organization.UserName)</h6>
                            <!-- Follower Count -->
                            <h4 class="mt-3">
                                <span class="badge" style="background-color:var(--primary-color)">@Model.TotalFollowers Followers</span>
                            </h4>
                        </div>
                    </div>
                <hr>
                <div class="row">
                    <h5>Overview</h5>
                    <div class="col">
                        <p class="card-text">Total Events: @Model.TotalEvents</p>
                        <p class="card-text">Total Posts: @Model.TotalPosts</p>
                    </div>
                </div>
                <hr>
                <div class="d-grid gap-2">
                    <a asp-action="Details" asp-controller="Organization" class="btn button-style"><i class="bi bi-person" style="color:white"></i> Manage Profile</a>
                    <a asp-action="Manage" asp-controller="Posts" class="btn button-style"><i class="bi bi-sticky" style="color:white"></i>  Manage Posts</a>
                    <a asp-action="Manage" asp-controller="Events" class="btn button-style"><i class="bi bi-calendar-event" style="color:white"></i> Manage Events</a>
                </div>
            </div>
        </div>
        <!-- Recent Volunteers -->
        <div class="card mb-3 flex-grow-1">
            <div class="card-body">
                <h2 class="card-title">Followers</h2>
                <div class="list-group list-group-flush">
                    @foreach (var volunteer in Model.Followers)
                    {
                        <a class="list-group-item list-group-item d-flex align-items-center" asp-controller="Follow" asp-action="RedirectToDetails" asp-route-id="@volunteer.Follower.Id">
                            <img src="@(volunteer.Follower.Image!= null && volunteer.Follower.Image.Length > 0 ? "data:image/jpeg;base64," + Convert.ToBase64String(volunteer.Follower.Image) : Url.Content("~/images/avatar.png"))"
                                 alt="Profile Picture"
                                 class="rounded-circle me-3 shadow"
                                 style="height:24px; width: 24px; object-fit: cover;">
                            <span>@volunteer.Follower.UserName</span>
                            
                        </a>
                    }
                </div>
                <div class="d-grid gap-2">
                    <a class="btn btn-block mt-4 button-style" asp-action="GetFollowers" asp-controller="Follow">View full list</a>
                </div>
            </div>
        </div>
    </div>


    <!-- Main Content -->
    <div class="col-md-9">
        <!-- Event Calendar -->
        <div class="card mb-3">
            <div class="card-body">
                <h2>Event Calendar</h2>
                <hr />
                <!-- Calendar component -->
                <div id="calendar"></div>
            </div>
        </div>
    </div>
</div>


<!-- Graphical Analytics Section -->
<div class="row my-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Volunteer Engagement</h5>
                <!-- Chart.js for graphical analytics -->
                <canvas id="volunteerEngagementChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Event Attendance</h5>
                <!-- Chart.js for graphical analytics -->
                <canvas id="eventAttendanceChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include Chart.js and FullCalendar.io scripts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>

    <!-- Initialize Chart.js -->
    <script>
        // Initialize Chart.js for graphical analytics
        var volunteerEngagementCtx = document.getElementById('volunteerEngagementChart').getContext('2d');
        $.ajax({
            url: '/Dashboard/GetVolunteerEngagementData',
            type: 'GET',
            success: function (data) {
                // Process the retrieved data and populate the chart
                var volunteerEngagementChart = new Chart(volunteerEngagementCtx, {
                    type: 'line',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: 'Volunteer Engagement',
                            data: data.engagementValues,
                            fill: false,
                            borderColor: 'rgb(48, 116, 115)',
                            tension: 0.1
                        }]
                    }
                });
            },
            error: function (error) {
                console.error('Error fetching volunteer engagement data:', error);
            }
        });


        var eventAttendanceCtx = document.getElementById('eventAttendanceChart').getContext('2d');
        // Fetch event attendance data using AJAX
        $.ajax({
            url: '/Dashboard/GetEventAttendanceData',
            type: 'GET',
            success: function (data) {
                // Process the retrieved data and populate the chart
                var eventAttendanceChart = new Chart(eventAttendanceCtx, {
                    type: 'bar',
                    data: {
                        labels: data.labels, // Array of event names
                        datasets: [{
                            label: 'Event Attendance',
                            data: data.attendance, // Array of attendance counts
                            backgroundColor: 'rgb(48, 116, 115)',
                            borderColor: 'rgb(48, 116, 115)',
                            borderWidth: 1
                        }]
                    }
                });
            },
            error: function (error) {
                console.error('Error fetching event attendance data:', error);
            }
        });

    </script>

    <!-- Initialize FullCalendar.io -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: '/Events/GetEvents',
                eventClick: function (info) {
                    // Navigate to the URL associated with the clicked event
                    window.location.href = '/Events/Details/' + info.event.id;
                },
                eventMouseEnter: function (info) {
                    var tooltip = new Tooltip(info.el, {
                        title: info.event.title,
                        placement: 'top',
                        trigger: 'hover',
                        container: 'body'
                    });
                },
                eventMouseLeave: function () {
                    $('.tooltip').remove();
                }

            });
            calendar.render();
        });
    </script>
}
