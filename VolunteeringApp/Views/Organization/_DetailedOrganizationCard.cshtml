@model VolunteeringApp.Models.Identity.Organization
@using VolunteeringApp.Models.Enums

<link rel="stylesheet" href="~/css/organization_type_coloring.css" />

@{
    var organizationType = Model.OrganizationType.GetDisplayName();
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <!--Column 1-->
        <!-- Avatar and Basic Info -->
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-end">
                        <!-- Organization Type Badge -->
                        <h6><span class="badge @Model.OrganizationType">@organizationType</span></h6>
                    </div>
                    <div class="text-center">                 
                        <!-- Avatar Photo -->
                        <img src="~/images/avatar.png" class="img-fluid rounded-circle mb-3" style="max-height:96px;max-width:96px" alt="Avatar">
                        <!-- Organization Name -->
                        <h4 class="card-title">@Html.DisplayFor(modelItem => Model.OfficialName)</h4>
                        <h6 class="card-subtitle mb-2 text-muted">&#64;@Html.DisplayFor(modelItem => Model.UserName)</h6>
                        <!-- Follower Count -->
                        <h4 class="mt-3">
                            <span class="badge" style="background-color:var(--primary-color)">@ViewBag.followerNumber Followers</span>
                        </h4>
                        <!-- Contact Info -->
                        <ul class="list-unstyled">
                            <li>Email: <a href="mailto:@Model.Email" class="link-dark">@Html.DisplayFor(model => model.Email)</a></li>
                            <li>Phone: <a href="tel:@Model.PhoneNumber" class="link-dark">@Html.DisplayFor(model => model.PhoneNumber)</a></li>
                            <li>Website: <a href="@Model.Website" class="link-dark">@Html.DisplayFor(model => model.Website)</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-footer bg-transparent text-center">
                    <!-- Edit and Delete Buttons -->
                    @if (ViewBag.isTheProfileOwner)
                    {
                        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-outline-secondary-custom">Edit Profile</a>
                        <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-outline-danger-custom">Delete Profile</a>
                    }
                    else
                    {                     
                        <!-- Follow/Unfollow Button -->
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="d-flex justify-content-center">
                                @if (ViewBag.isFollowing)
                                {
                                    <form asp-controller="Follow" asp-action="Unfollow" asp-route-id="@Model.Id" method="post">
                                        <button type="submit" class="btn btn-danger-custom me-2"><i class="bi bi-person-dash-fill"></i> Unfollow</button>
                                    </form>
                                }
                                else if (!ViewBag.isFollowing)
                                {
                                    <form asp-controller="Follow" asp-action="Follow" asp-route-id="@Model.Id" method="post">
                                        <button type="submit" class="btn btn-secondary-custom me-2"><i class="bi bi-person-plus-fill"></i> Follow</button>
                                    </form>
                                }
                                <a class="btn btn-dark" asp-controller="Chat" asp-action="CreateOrFetchPrivateChat" asp-route-id="@Model.Id"><i class="bi bi-send-fill"></i> Message</a>
                            </div>
                        }
                    }
                </div>
            </div>
            
        </div>
        <!--Column 2-->
        <!-- Main Content -->
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Organization Description -->
                    <h5 class="card-title">Description</h5>
                    @if (Model.Description != null)
                    {
                        <p class="card-text">@Html.DisplayFor(model => model.Description)</p>
                    }
                    else
                    {
                        <p class="card-text">No description provided.</p>
                    }
                </div>
            </div>
            <!-- Posts Section -->
            <div class="mt-4 d-flex justify-content-between align-items-center">
                <h3>Posts</h3>
                @if (ViewBag.isTheProfileOwner)
                {
                    <a asp-action="Manage" asp-controller="Posts" class="btn btn-dark"><i class="bi bi-pencil"></i> Manage Posts</a>
                }
            </div>
            <hr />
            @if (ViewData["Posts"] != null && ((IEnumerable<VolunteeringApp.Models.Social.Post>)ViewData["Posts"]).Any())
            {
                <div class="list-group">
                    @foreach (var post in ViewData["Posts"] as IEnumerable<VolunteeringApp.Models.Social.Post>)
                    {
                        @Html.Partial("~/Views/Shared/Partials/_PostTemplate.cshtml", post)
                    }
                </div>
            }
            else
            {
                <p>Nothing posted yet.</p>
            }

            <!-- Events Section -->
            <div class="mt-4 d-flex justify-content-between align-items-center">
                <h3>Events</h3>
                @if (ViewBag.isTheProfileOwner)
                {
                    <a asp-action="Manage" asp-controller="Events" class="btn btn-dark"><i class="bi bi-pencil"></i> Manage Events</a>
                }
            </div>
            <hr />
                @if (ViewData["Events"] != null && ((IEnumerable<VolunteeringApp.Models.Social.Event>)ViewData["Events"]).Any())
                {
                    @foreach (var @event in ViewData["Events"] as IEnumerable<VolunteeringApp.Models.Social.Event>)
                    {
                        @Html.Partial("~/Views/Shared/Partials/_DetailedEventCard.cshtml", @event)
                    }
                }
                else
                {
                    <p>No events organized yet.</p>
                }
        </div>
    </div>
</div>
